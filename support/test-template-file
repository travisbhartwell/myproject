#!/usr/bin/env bash
# -*- mode: shell-script; sh-shell: bash; sh-basic-offset: 4; sh-indentation: 4; coding: utf-8 -*-
# shellcheck shell=bash

if ! TEST_DIRECTORY=$(cd "$(dirname "${BASH_SOURCE[0]}")" &>/dev/null && pwd -P); then
    echo >&2 "Error fetching test directory."
    exit 1
fi
readonly TEST_DIRECTORY

if ! TEST_VENDOR_DIRECTORY=$(cd "${TEST_DIRECTORY}/../vendor" &>/dev/null && pwd -P); then
    echo >&2 "Error fetching test vendor directory."
    exit 1
fi
readonly TEST_VENDOR_DIRECTORY

# shellcheck source=./testing-support-lib
source "${TEST_DIRECTORY}/testing-support-lib"

# --------------------------------------------------------------------------------------------------
# Project Library Loading Tests
function test_mycmd_lib_is_loaded() {
    assertTrue 'MyCmd Lib is loaded' '[ -v _MYCMD_LIB ]'
}

function test_project_lib_is_loaded() {
    assertTrue 'Project Lib is loaded' '[ -v _MYPROJECT_LIB ]'
    assertTrue 'Project Tasks Support Lib is loaded' '[ -v _MYPROJECT_TASK_LIB ]'
    assertTrue 'Project User Support Lib is loaded' '[ -v _MYPROJECT_USER_LIB ]'
}

# --------------------------------------------------------------------------------------------------
# Test Helper Functions
function oneTimeSetUp() {
    copy_test_source_data

    load_myproject_lib_and_start_tracing
}

function oneTimeTearDown() {
    cleanup_test_data

    cleanup_tracing
}

# shellcheck source=../vendor/shunit2
. "${TEST_VENDOR_DIRECTORY}/shunit2"
