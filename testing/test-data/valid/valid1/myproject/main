#!/usr/bin/env -S mycmd project run
# -*- mode: shell-script; sh-shell: bash; sh-basic-offset: 4; sh-indentation: 4; coding: utf-8 -*-
# shellcheck shell=bash

set -o nounset -o errexit -o errtrace -o pipefail

declare -gx PROJECT_VARIABLE=1

function task_function1() {
    mycmd.output "Running task_function1"

    PROJECT_VARIABLE=2
}
myproject.register_task task1 task_function1

function task_function2() {
    local value="${1:-3}"
    mycmd.output "Running task_function2, setting value to ${value}."
    PROJECT_VARIABLE="${value}"
}
myproject.register_task task2 task_function2

function task_function3() {
    local -r arg1="${1}"
    local -r arg2="${2}"
    mycmd.output "Running task_function3, with argument '${arg1}', setting PROJECT_VARIABLE to '${arg2}'."
    PROJECT_VARIABLE="${arg2}"
}
myproject.register_task task3 task_function3 this-is-a-test 10

readonly MODULE1_DIR="${MYPROJECT_ROOT_DIRECTORY}/module1"

myproject.register_fileset DATA_FILES
myproject.add_files_to_fileset DATA_FILES \
    "${MODULE1_DIR}/file2" \
    "${MODULE1_DIR}/dir2/file1" \
    "${MODULE1_DIR}/file1" \
    "${MODULE1_DIR}/dir1/sub1/file3" \
    "${MODULE1_DIR}/dir1/file1"

function fileset_task_function1() {
    local -n fileset="${1}"

    myproject.for_each_in_fileset "${!fileset}" mycmd.output
}

myproject.register_task_with_fileset fileset-task \
    fileset_task_function1 \
    DATA_FILES
